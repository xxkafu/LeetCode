// this problem is simple
// the first solution  is mine
// the next solution is googled on the Internet
class Solution {
public:
	string intToRoman(int num) {
		int base = 1000;
		string Roman;
		while (num>0)
		{
			int msbValue = num / base;
			int msb = msbValue;
			switch (base){
			case 1000: Roman.append(msb, 'M'); break;
			case 100: {
				if (msb == 4) { Roman.append("CD"); msb -= 4; }
				else if (msb == 9) { Roman.append("CM"); msb -= 9; }
				else if (msb >= 5) { Roman.append("D"); msb -= 5; }
				Roman.append(msb, 'C'); break;
			}
			case 10: {
				if (msb == 4) { Roman.append("XL"); msb -= 4; }
				else if (msb == 9) { Roman.append("XC"); msb -= 9; }
				else if (msb >= 5) { Roman.append("L"); msb -= 5; }
				Roman.append(msb, 'X'); break;
			}
			case 1: {
				if (msb == 4) { Roman.append("IV"); msb -= 4; }
				else if (msb == 9) { Roman.append("IX"); msb -= 9; }
				else if (msb >= 5) { Roman.append("V"); msb -= 5; }
				Roman.append(msb, 'I'); break;
			}
			}
			num -= msbValue*base;
			base /= 10;
		}
		return Roman;

	}
};

class Solution {
public:
    string intToRoman(int num) {
        string str;  
        string symbol[]={"M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"};  
        int value[]=    {1000,900,500,400, 100, 90,  50, 40,  10, 9,   5,  4,   1}; 
        for(int i=0;num!=0;++i)
        {
            while(num>=value[i])
            {
                num-=value[i];
                str+=symbol[i];
            }
        }
        return str;
    }
};
