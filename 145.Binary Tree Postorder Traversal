//solution:
//easy
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> res;
        stack<TreeNode*> bot;
        TreeNode* ptr= root;
        if(root==NULL)
            return res;
        else{
            res.push_back(root->val);
            bot.push(root);
        }
        while(!bot.empty()){
            ptr=bot.top();
            while(ptr->right!=NULL){
                res.push_back(ptr->right->val);
                bot.push(ptr->right);
                ptr=ptr->right;
            }
            while(ptr->left==NULL){
                bot.pop();
                if(bot.empty())
                    break;
                ptr=bot.top();
            }
            if(!bot.empty()){
                bot.pop();
                bot.push(ptr->left);
                res.push_back(ptr->left->val);
            }
        }
        for(int i=0; i<res.size()/2;i++)
            swap(res[i],res[res.size()-1-i]);

        return res;
    }
};

