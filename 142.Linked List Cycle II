//solution:
//remeber intersection node+1 , and the start both begin
//the node meet is the connect node
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head==NULL)
            return head;
        ListNode* slow=head;
        ListNode* fast=head->next;
        while(fast!=NULL){
            if(slow==fast)
                break;
            slow=slow->next;
            fast=fast->next;
            if(fast==NULL)
                return NULL;
            fast=fast->next;
        }
        if(fast==NULL)
            return NULL;
        fast=fast->next;
        ListNode* res=head;
        while(fast!=res){
            fast=fast->next;
            res=res->next;
        }
        return res;
    }
};

