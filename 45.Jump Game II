//solution1
class Solution {
public:
    int jump(int A[], int n) {
        int maxIndex=0;
        int maxReach = 0;
        int res =0;
        for(int i=0; i<n ;i++) {
            if(maxReach<i) {
                if(maxIndex<i)
                    return -1;
                else {
                    res++;
                    maxReach = maxIndex;
                }
            }
            maxIndex = max(maxIndex,A[i]+i);
        }
        return res;
    }
};

//solution
class Solution {
public:
    int jump(int A[], int n) {
        if(n==1)
            return 0;
        int maxIndex =0;
        vector<int> dp(n,0);
        for(int i=0; i<n; i++) {
            while(i+A[i]>maxIndex) {
                maxIndex++;
                dp[maxIndex]=dp[i]+1; 
                if(maxIndex ==n-1)
                    return dp[maxIndex];
            }
        }
    }
};
