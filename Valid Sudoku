class Solution {
public:
    bool isValidSudoku(vector<vector<char> > &board) {
        vector<int> hash(10,0);
        // row
        for(int i = 0 ;i<9;i++) {
            for(int j =0; j<9; j++) {
                if(board[i][j]=='.')
                    continue;
                else {
                    int key =board[i][j]-'0'; 
                    hash[key]++;
                    if(hash[key]>i+1)
                        return false;
                }
            }
        }
        // column
        hash.clear();
        for(int j=0; j<9; j++) {
            for(int i= 0; i<9;i++) {
                if(board[i][j]=='.')
                    continue;
                else {
                    int key = board[i][j]-'0';
                    hash[key]++;
                    if(hash[key]>j+1)
                        return false;
                }
            }
        }
        // for box
        hash.clear();
        for(int k= 0; k<3; k++) {
            for(int m=0; m<3;m++) <
                for(int i=0; i<3; i++) {
                    for(int j=0; j<3;j++) {
                        if(board[i+3*k][j+3*m]=='.')
                            continue;
                        else {
                            int key = board[3*k+i][3*m+j]-'0';
                            hash[key]++;
                            if(hash[key]>3*k+m+1)
                                return false;
                        }
                    }
                }
        }

        return true;
    }
};

