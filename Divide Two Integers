class Solution {
public:
    int divide(int dividend, int divisor) {
        bool pos = (dividend<0 && divisor<0) || (dividend>0 && divisor>0);
        int res =0;
        if(divisor ==0)
            return INT_MAX;
        if(dividend == 0)
            return 0;
        if(dividend == INT_MIN) {
            if(divisor == -1)
                return INT_MAX;
            else
                if(divisor == INT_MIN)
                    return 1;
                else {
                    dividend +=abs(divisor);
                    res++;
                }
        }
        if(divisor == INT_MIN )
            return 0;
        dividend = abs(dividend);
        divisor  = abs(divisor);
        int nshift =0;
        while(divisor<=(dividend>>1)) {
            divisor <<=1;
            nshift++;
        }
        while(nshift>=0) {
            if(dividend>=divisor) {
                dividend-=divisor;
                res +=1<<nshift;
            }
            nshift--;
            divisor>>=1;
        }
        return pos? res: -res;
    }
};
