/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> generateTrees(int n) {
        return helper(1,n);
    }
    
    vector<TreeNode*> helper(int min, int max) {
        vector<TreeNode*> res;
        if(min>max) {
            res.push_back(NULL);
            return res;
        }
        for(int i =min; i<= max; i++) {
            vector<TreeNode*> left = helper(min,i-1);
            vector<TreeNode*> right = helper(i+1,max);
            for(int j = 0; j<left.size(); j++)
                for(int k = 0; k<right.size(); k++) {
                    TreeNode* ptr = new TreeNode(i);
                    ptr->left = left[j];
                    ptr->right = right[k];
                    res.push_back(ptr);
                }
        }
        return res;
    }

};
