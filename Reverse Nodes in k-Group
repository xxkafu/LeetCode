/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseKGroup(ListNode *head, int k) {
        if(k<2)
            return head;

        ListNode *nullhead = new ListNode(-1);
        nullhead->next = head;
        ListNode *l1 = nullhead;
        ListNode *l2 = l1;

        while(l2 !=NULL) { 
            int n=0;
            while(l2!=NULL && n<k) {
                l2 = l2->next;
                n++;
            }
            if(l2 !=NULL) {
                ListNode *l3= l1->next;
                ListNode *l4= l3->next;
                while(l1->next != l2) {
                    l3->next = l4->next;
                    l4->next = l1->next;
                    l1->next = l4;
                    l4 = l3->next;
                }
                l1 = l3;
                l2 = l1;
            }
        }

        return nullhead->next;
    }
};
