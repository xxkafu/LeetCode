class Solution {
public:
    int maxProfit(vector<int>& prices) {
        return helper(prices,2);
    }
    int helper(vector<int>& prices, int k) {
        vector<int> row(k+1,0);
        vector<vector<int> > global(prices.size()+1,row);
        vector<vector<int> > local(prices.size()+1,row);
        for(int i=2;i<prices.size()+1;i++){//i=dayIndex
            int diff= prices[i-1]-prices[i-2];
            for(int j=1;j<k+1;j++){// transTimeIndex
                local[i][j]=max(local[i-1][j]+diff,global[i-1][j-1]+max(diff,0));
                global[i][j]=max(global[i-1][j],local[i][j]);
            }
        }
        return global[prices.size()][k];
    }
};
